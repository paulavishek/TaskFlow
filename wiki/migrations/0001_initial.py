# Generated by Django 5.2.3 on 2025-11-01 01:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_userprofile_completed_wizard_and_more'),
        ('kanban', '0027_taskfile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WikiCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(default='folder', help_text='Font Awesome icon name', max_length=50)),
                ('color', models.CharField(default='#3498db', help_text='Hex color code', max_length=7)),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wiki_categories', to='accounts.organization')),
            ],
            options={
                'verbose_name_plural': 'Wiki Categories',
                'ordering': ['position', 'name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.CreateModel(
            name='WikiPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField(help_text='Markdown supported')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True, help_text='Unpublished pages are visible only to editors')),
                ('is_pinned', models.BooleanField(default=False, help_text='Pinned pages appear at the top')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for search and filtering')),
                ('view_count', models.IntegerField(default=0)),
                ('version', models.IntegerField(default=1)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='wiki.wikicategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_wiki_pages', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wiki_pages', to='accounts.organization')),
                ('parent_page', models.ForeignKey(blank=True, help_text='Parent page for hierarchical organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_pages', to='wiki.wikipage')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_wiki_pages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_pinned', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='WikiLinkBetweenPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('source_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_links', to='wiki.wikipage')),
                ('target_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_links', to='wiki.wikipage')),
            ],
        ),
        migrations.CreateModel(
            name='WikiLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', models.CharField(choices=[('task', 'Task'), ('board', 'Board'), ('meeting_notes', 'Meeting Notes')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, help_text='Why this wiki page is relevant to this item', max_length=500, null=True)),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wiki_links', to='kanban.board')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wiki_links', to='kanban.task')),
                ('wiki_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links_to_items', to='wiki.wikipage')),
            ],
        ),
        migrations.CreateModel(
            name='WikiAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='wiki_attachments/%Y/%m/%d/')),
                ('filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(help_text='File type (doc, pdf, image, etc.)', max_length=50)),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='wiki.wikipage')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MeetingNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('content', models.TextField(help_text='Markdown supported')),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Meeting duration in minutes', null=True)),
                ('action_items', models.JSONField(blank=True, default=list, help_text='Action items: [{"task": "...", "assigned_to": "...", "due_date": "..."}]')),
                ('decisions', models.JSONField(blank=True, default=list, help_text='Key decisions made')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendees', models.ManyToManyField(related_name='meeting_notes_attended', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_meeting_notes', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_notes', to='accounts.organization')),
                ('related_board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meeting_notes', to='kanban.board')),
                ('related_wiki_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meeting_notes_references', to='wiki.wikipage')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='WikiPageAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.CharField(choices=[('view', 'View Only'), ('edit', 'Edit'), ('admin', 'Admin')], default='view', max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wiki_access_granted', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_records', to='wiki.wikipage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WikiPageVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('change_summary', models.CharField(blank=True, help_text='Summary of changes made in this version', max_length=500, null=True)),
                ('edited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='wiki.wikipage')),
            ],
            options={
                'ordering': ['-version_number'],
            },
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['organization', '-updated_at'], name='wiki_wikipa_organiz_7f30dd_idx'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['slug'], name='wiki_wikipa_slug_f0f6d9_idx'),
        ),
        migrations.AddIndex(
            model_name='wikipage',
            index=models.Index(fields=['category'], name='wiki_wikipa_categor_945557_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='wikilinkbetweenpages',
            unique_together={('source_page', 'target_page')},
        ),
        migrations.AlterUniqueTogether(
            name='wikilink',
            unique_together={('wiki_page', 'link_type', 'board'), ('wiki_page', 'link_type', 'task')},
        ),
        migrations.AddIndex(
            model_name='meetingnotes',
            index=models.Index(fields=['organization', '-date'], name='wiki_meetin_organiz_f7920a_idx'),
        ),
        migrations.AddIndex(
            model_name='meetingnotes',
            index=models.Index(fields=['related_board'], name='wiki_meetin_related_958154_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='wikipageaccess',
            unique_together={('page', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='wikipageversion',
            unique_together={('page', 'version_number')},
        ),
    ]
