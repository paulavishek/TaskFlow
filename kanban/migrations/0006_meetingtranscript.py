# Generated by Django 5.0.1 on 2025-06-18 19:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kanban', '0005_task_collaboration_required_task_complexity_score_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MeetingTranscript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Meeting title or topic', max_length=200)),
                ('meeting_type', models.CharField(choices=[('standup', 'Daily Standup'), ('planning', 'Sprint Planning'), ('review', 'Review Meeting'), ('retrospective', 'Retrospective'), ('general', 'General Meeting')], default='general', max_length=20)),
                ('meeting_date', models.DateField(help_text='Date when the meeting occurred')),
                ('transcript_text', models.TextField(help_text='Raw meeting transcript')),
                ('transcript_file', models.FileField(blank=True, help_text='Uploaded transcript file', null=True, upload_to='meeting_transcripts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('extraction_results', models.JSONField(blank=True, default=dict, help_text='AI extraction results including tasks and metadata')),
                ('tasks_extracted_count', models.IntegerField(default=0)),
                ('tasks_created_count', models.IntegerField(default=0)),
                ('participants', models.JSONField(blank=True, default=list, help_text='List of meeting participants')),
                ('meeting_context', models.JSONField(blank=True, default=dict, help_text='Additional meeting context and metadata')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_transcripts', to='kanban.board')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_transcripts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
